<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oliwen.mapper.SystemAuthMapper" >
  <resultMap id="BaseResultMap" type="com.oliwen.pojo.SystemAuth" >
    <constructor >
      <idArg column="auth_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="role_ids" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="admin_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="admin_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    auth_id, user_id, role_ids, admin_id, admin_name, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.oliwen.pojo.SystemAuthExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from system_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from system_auth
    where auth_id = #{authId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from system_auth
    where auth_id = #{authId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.oliwen.pojo.SystemAuthExample" >
    delete from system_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oliwen.pojo.SystemAuth" >
    insert into system_auth (auth_id, user_id, role_ids,
      admin_id, admin_name, create_time
      )
    values (#{authId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleIds,jdbcType=VARCHAR},
      #{adminId,jdbcType=INTEGER}, #{adminName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.oliwen.pojo.SystemAuth" >
    insert into system_auth
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="authId != null" >
        auth_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleIds != null" >
        role_ids,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="adminName != null" >
        admin_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="authId != null" >
        #{authId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleIds != null" >
        #{roleIds,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null" >
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oliwen.pojo.SystemAuthExample" resultType="java.lang.Integer" >
    select count(*) from system_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update system_auth
    <set >
      <if test="record.authId != null" >
        auth_id = #{record.authId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.roleIds != null" >
        role_ids = #{record.roleIds,jdbcType=VARCHAR},
      </if>
      <if test="record.adminId != null" >
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.adminName != null" >
        admin_name = #{record.adminName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update system_auth
    set auth_id = #{record.authId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      role_ids = #{record.roleIds,jdbcType=VARCHAR},
      admin_id = #{record.adminId,jdbcType=INTEGER},
      admin_name = #{record.adminName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oliwen.pojo.SystemAuth" >
    update system_auth
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleIds != null" >
        role_ids = #{roleIds,jdbcType=VARCHAR},
      </if>
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null" >
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where auth_id = #{authId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oliwen.pojo.SystemAuth" >
    update system_auth
    set user_id = #{userId,jdbcType=INTEGER},
      role_ids = #{roleIds,jdbcType=VARCHAR},
      admin_id = #{adminId,jdbcType=INTEGER},
      admin_name = #{adminName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where auth_id = #{authId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.oliwen.pojo.SystemAuthExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from system_auth
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>